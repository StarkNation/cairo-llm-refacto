question,answer
"Declare an interface","

    #[starknet::interface]
    trait ISimpleStorage<TContractState> {
        fn set(ref self: TContractState, x: u128);
    }

    #[starknet::contract]
    mod SimpleStorage {

    #[storage]
    struct Storage {
        stored_data: u128
    }

    #[external(v0)]
    impl SimpleStorage of super::ISimpleStorage<ContractState> {
        fn set(ref self: ContractState, x: u128) {
            self.stored_data.write(x);
        }
    }
}


Explanations:
    - interfaces are declared using #[starknet::interface]
    - a set function is declared and should be implemented by the SimpleStorage contract.
    - we declare the implementation of the interface using impl SimpleStorage of super::ISimpleStorage<ContractState> {}
"
"What is a contract interface","The interface of a contract represents the functions this contract exposes to the outside world."